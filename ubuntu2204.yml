---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  
  tasks:
    - name: Ubuntu Like | Update Cache
      become: true
      apt:
        update_cache: yes
        cache_valid_time: 600
      when: ansible_distribution == "Ubuntu"

    - name: Ubuntu Like | Update System
      become: true
      apt:
        upgrade: dist
        autoremove: yes
        autoclean: yes
        force_apt_get: yes
      when: ansible_distribution == "Ubuntu"
    
    - name: Installing Linux App
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - tilix
          - virtualbox
          - mlocate
          - krita
          - jq
          - bashtop
          - nano
          - net-tools
          - nmap
          - zsh-autosuggestions
          - fzf
          
          
    - block:  
      - name: Install Terminator
        become: true
        apt:
          name: terminator
          state: present

    
      - name: Install and configure ZSH
        become: true
        apt:
          name: zsh
          state: present
      
      - name: Configurar o Zsh como shell padr√£o
        become: true
        shell: chsh -s /usr/bin/zsh
      
      - name: Baixar o Oh-My-Zsh
        git:
          repo: https://github.com/ohmyzsh/ohmyzsh.git
          dest: "{{ ansible_user_dir }}/.oh-my-zsh"
      
      - name: Configurar o arquivo .zshrc
        become: true
        template:
          src: templates/zshrc.j2
          dest: "{{ ansible_user_dir }}/.zshrc"
        become: false
      
      - name: Ativar Oh-My-Zsh
        become: true
        shell: |
          source "/home/reisvmr/.oh-my-zsh/oh-my-zsh.sh"
          source "/home/reisvmr/.zshrc"
        args:
          executable: /usr/bin/zsh
        
      #- name: Create ZSH configuration file
      #  become: true
      #  template:
      #    src: zshrc.j2
      #    dest: ~/.zshrc

    

    - name: Installing AWS CLI via pip3
      become: true
      pip:
        name: awscli
        executable: pip3

    - block:
      - name: Install Google Key
        become: true
        apt_key: 
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable

    - block:
      - name: Installing Vagrant 2.2.18
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.18/vagrant_2.2.18_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing Vault 1.8.1
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vault/1.8.1/vault_1.8.1_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes

    - block:
      - name: Installing gomplate 3.9.0
        become: true
        get_url:    
          url: 'https://github.com/hairyhenderson/gomplate/releases/download/v3.9.0/gomplate_linux-amd64'
          dest: /usr/local/bin/gomplate
          mode: 755


    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        ignore_errors: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}' 
        loop: 
          - ms-python.python
          - ms-azuretools.vscode-docker
          - bbenoist.vagrant
          - hashicorp.terraform
          - gruntfuggly.todo-tree
          - njpwerner.autodocstring
          - eamodio.gitlens
          - redhat.ansible

    - block: 
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user: 
          name: '{{ ansible_user_id }}'
          groups: docker 
          append: yes
      - name: Install Docker-Compose
        become: true
        get_url:
          url: 'https://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64'
          dest: '/usr/local/bin/docker-compose'
          mode: 755
      - name: Install Docker Machine Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/machine/v0.16.0/contrib/completion/bash/docker-machine.bash'
          dest: '/etc/bash_completion.d/docker-machine'
      - name: Install Docker-Compose Bash Completion
        become: true
        get_url:
          url: 'https://raw.githubusercontent.com/docker/compose/1.26.2/contrib/completion/bash/docker-compose'
          dest: '/etc/bash_completion.d/docker-compose'
      - name: Install Docker-Compose and Docker Machine Zsh Completion
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git docker docker-compose)'
        
    - block:
      - name: Installing Kubectl 1.22.0
        become: true
        get_url:    
          url: 'https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl'
          dest: /usr/local/bin/kubectl
          mode: 755
      - name: Downloading Kubectx and Kubens 
        become: true
        git:
          repo: 'https://github.com/ahmetb/kubectx'
          dest: /opt/kubectx 
      - name: Creating Symlink to kubectx and kubens 
        become: true
        file:
          src: '/opt/kubectx/{{ item }}'
          dest: '/usr/local/bin/{{ item }}'
          state: link
        with_items:
          - kubectx
          - kubens  
          
    - block:
      - name: Adding Longsleep/Golang Backports Repository
        become: true
        apt_repository:
          repo: 'ppa:longsleep/golang-backports'
      - name: Install Golang 
        become: true
        apt:
          name: golang-go
    - block:
      - name: Installing Terraform
        become: true
        get_url:
          url: https://releases.hashicorp.com/terraform/1.0.10/terraform_1.0.10_linux_amd64.zip
          dest: /tmp/terraform.zip
        register: terraform_download

      - name: Extracting Terraform
        become: true
        unarchive:
          src: /tmp/terraform.zip
          dest: /usr/local/bin/
          remote_src: yes
          creates: /usr/local/bin/terraform
        when: terraform_download.changed

# OPTIONAL:
#  - PEEK - Lightweight Screen Recorder that can export as GIF
#  - OBS-STUDIO - Screen Recorder and Casting Software 
#  - Brave Browser - Secure web browser
#  - Ulauncher - Application Launcher

    - block:
      - name: Adding Peek Repository
        become: true
        apt_repository:
          repo: 'ppa:peek-developers/stable'
      - name: Install Peek
        become: true
        apt:
          name: peek

    - block:
      - name: Install obsproject Ubuntu Repo
        become: true
        apt_repository:
          repo: 'ppa:obsproject/obs-studio'
      - name: Install obs Studio
        become: true
        apt:
          name: obs-studio

    - block: 
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave
      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser

    - block:
      - name: Adding Ulauncher Repository
        become: true
        apt_repository:
          repo: 'ppa:agornostal/ulauncher'
      - name: Install Ulauncher
        become: true
        apt:
          name: ulauncher
